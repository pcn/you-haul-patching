diff -ruN openresty.orig/usr/lib/ukp/openresty/launcher/openresty openresty/usr/lib/ukp/openresty/launcher/openresty
--- openresty.orig/usr/lib/ukp/openresty/launcher/openresty	2025-08-12 07:49:19.000000000 -0400
+++ openresty/usr/lib/ukp/openresty/launcher/openresty	2025-08-22 18:31:48.757555487 -0400
@@ -157,20 +157,20 @@
 export UKP_PROXY_METRONAME="${DNS_HOSTNAME}"
 export UKP_PROXY_PUBLIC_ADDR="${OPENRESTY_PUBLIC_ADDR}"
 export UKP_PROXY_PUBLIC_ADDR_V6="${OPENRESTY_PUBLIC_ADDR6}"
-export UKP_PROXY_PUBLIC_CERT="${UKP_DATA}/certificates/_.${DNS_HOSTNAME}.${DNS_ZONE_APP}"
+export UKP_PROXY_PUBLIC_CERT="${UKP_DATA}/certificates/wildcard"
 export UKP_PROXY_API_ADDR="${UKP_PROXY_PUBLIC_ADDR}"
-export UKP_PROXY_API_CERT="${UKP_DATA}/certificates/api.${DNS_HOSTNAME}.${DNS_ZONE_API}"
-export UKP_PROXY_INDEX_CERT="${UKP_DATA}/certificates/index.${DNS_HOSTNAME}.${DNS_ZONE_API}"
+export UKP_PROXY_API_CERT="${UKP_DATA}/certificates/wildcard"
+export UKP_PROXY_INDEX_CERT="${UKP_DATA}/certificates/wildcard"
 
 [ -z "${UKP_PROXY_PUBLIC_ADDR}" -o -z "${UKP_PROXY_API_ADDR}" ] \
     && die "${NET_IFACE}: Failed to retrieve IPv4 address of public interface"
 
-# Request required certificates (lego)
-if [ ! -e "${UKP_PROXY_PUBLIC_CERT}.key" -o ! -e "${UKP_PROXY_API_CERT}.key" -o ! -e "${UKP_PROXY_INDEX_CERT}.key" ]; then
+# Request required certificates (wildcard)
+if [ ! -e "${UKP_DATA}/certificates/wildcard.key" ]; then
 	/usr/sbin/update-ukp-certificates notrigger || true # package: ukp-lego
-	[ ! -e "${UKP_PROXY_PUBLIC_CERT}.key" -o ! -e "${UKP_PROXY_API_CERT}.key" -o ! -e "${UKP_PROXY_INDEX_CERT}.key" ] \
-	    && die "ERROR: One or all certificate files missing:" \
-		   "${UKP_PROXY_PUBLIC_CERT}.key, ${UKP_PROXY_API_CERT}.key, ${UKP_PROXY_INDEX_CERT}.key." \
+	[ ! -e "${UKP_DATA}/certificates/wildcard.key" ] \
+	    && die "ERROR: Wildcard certificate files missing:" \
+		   "${UKP_DATA}/certificates/wildcard.key, ${UKP_DATA}/certificates/wildcard.crt" \
 		   $'\n'"Automatic issuing failed." \
 		   "Run 'update-ukp-certificates' manually and examine the output."
 fi
diff -ruN openresty.orig/usr/lib/ukp/platform/openresty/conf/nginx.conf.template openresty/usr/lib/ukp/platform/openresty/conf/nginx.conf.template
--- openresty.orig/usr/lib/ukp/platform/openresty/conf/nginx.conf.template	2025-08-21 22:53:47.000000000 -0400
+++ openresty/usr/lib/ukp/platform/openresty/conf/nginx.conf.template	2025-08-22 18:12:32.961600114 -0400
@@ -56,8 +56,8 @@
 		listen ${UKP_PROXY_PUBLIC_ADDR}:443 ssl reuseport;
 		listen [${UKP_PROXY_PUBLIC_ADDR_V6}]:443 ssl reuseport;
 
-		ssl_certificate ${UKP_PROXY_PUBLIC_CERT}.crt;
-		ssl_certificate_key ${UKP_PROXY_PUBLIC_CERT}.key;
+		ssl_certificate /var/lib/ukp/data/certificates/wildcard.crt;
+		ssl_certificate_key /var/lib/ukp/data/certificates/wildcard.key;
 
 		ssl_certificate_by_lua_file lua/cert.lua;
 
@@ -160,8 +160,8 @@
 		listen ${UKP_PROXY_PUBLIC_ADDR}:443 ssl;
 		listen [${UKP_PROXY_PUBLIC_ADDR_V6}]:443 ssl;
 
-		ssl_certificate ${UKP_PROXY_INDEX_CERT}.crt;
-		ssl_certificate_key ${UKP_PROXY_INDEX_CERT}.key;
+		ssl_certificate /var/lib/ukp/data/certificates/wildcard.crt;
+		ssl_certificate_key /var/lib/ukp/data/certificates/wildcard.key;
 
 		# Let registry handle uploads
 		proxy_http_version 1.1;
@@ -208,8 +208,8 @@
 		listen ${UKP_PROXY_PUBLIC_ADDR}:42 ssl any_port reuseport;
 		listen [${UKP_PROXY_PUBLIC_ADDR_V6}]:42 ssl any_port reuseport;
 
-		ssl_certificate ${UKP_PROXY_PUBLIC_CERT}.crt;
-		ssl_certificate_key ${UKP_PROXY_PUBLIC_CERT}.key;
+		ssl_certificate /var/lib/ukp/data/certificates/wildcard.crt;
+		ssl_certificate_key /var/lib/ukp/data/certificates/wildcard.key;
 
 		ssl_certificate_by_lua_file lua/cert.lua;
 
@@ -232,8 +232,8 @@
 		# seem to be affected by this)
 		# postgres_keepalive 2m;
 
-		ssl_certificate ${UKP_PROXY_PUBLIC_CERT}.crt;
-		ssl_certificate_key ${UKP_PROXY_PUBLIC_CERT}.key;
+		ssl_certificate /var/lib/ukp/data/certificates/wildcard.crt;
+		ssl_certificate_key /var/lib/ukp/data/certificates/wildcard.key;
 
 		ssl_certificate_by_lua_file lua/cert.lua;
 
diff -ruN openresty.orig/usr/lib/ukp/platform/openresty/lua/access.lua openresty/usr/lib/ukp/platform/openresty/lua/access.lua
--- openresty.orig/usr/lib/ukp/platform/openresty/lua/access.lua	2025-08-12 09:03:56.000000000 -0400
+++ openresty/usr/lib/ukp/platform/openresty/lua/access.lua	2025-08-22 00:05:49.926628982 -0400
@@ -2,7 +2,8 @@
 local consts = require 'consts'
 local strings = require 'strings'
 
-if ngx.var.host == consts.proxy_host then
+-- Check if hostname has API prefix (api- or api.) and is within our domain
+if strings.endsWith(ngx.var.host, consts.proxy_domain) and consts.is_api_hostname(ngx.var.host) then
 	return ngx.exec('@api_domain')
 end
 
diff -ruN openresty.orig/usr/lib/ukp/platform/openresty/lua/cert.lua.template openresty/usr/lib/ukp/platform/openresty/lua/cert.lua.template
--- openresty.orig/usr/lib/ukp/platform/openresty/lua/cert.lua.template	2025-08-12 09:03:56.000000000 -0400
+++ openresty/usr/lib/ukp/platform/openresty/lua/cert.lua.template	2025-08-22 00:05:11.571813166 -0400
@@ -19,16 +19,21 @@
 	-- but it is fine for subdomains. In particular, we see this behavior
 	-- for AWS ALBs.
 	return
-elseif name == consts.proxy_host then
-	-- API domain handler. First check for the API server name. We have a
-	-- dedicated certificate for it
-	cert = {
-		crt = consts.api_cert,
-		needs_close = false,
-	}
-elseif strings.endsWith(name, consts.proxy_domain_app) then
-	-- APP domain handler. Just fallback to the default certificate
-	return
+elseif strings.endsWith(name, consts.proxy_domain) then
+	-- Check if this is within our managed domain
+	if consts.is_api_hostname(name) then
+		-- API domain handler. Use dedicated certificate for API hostnames
+		cert = {
+			crt = consts.api_cert,
+			needs_close = false,
+		}
+	elseif consts.is_app_hostname(name) then
+		-- APP domain handler. Just fallback to the default certificate
+		return
+	else
+		-- Other subdomains within our domain, fallback to default certificate
+		return
+	end
 else
 	-- Custom domain handler
 	cert = {
diff -ruN openresty.orig/usr/lib/ukp/platform/openresty/lua/consts.lua.template openresty/usr/lib/ukp/platform/openresty/lua/consts.lua.template
--- openresty.orig/usr/lib/ukp/platform/openresty/lua/consts.lua.template	2025-08-12 09:03:56.000000000 -0400
+++ openresty/usr/lib/ukp/platform/openresty/lua/consts.lua.template	2025-08-22 18:12:00.565714083 -0400
@@ -1,4 +1,5 @@
 local ssl = require 'ngx.ssl'
+local strings = require 'strings'
 
 ---@class (exact) certificate
 ---@field chain any?
@@ -7,11 +8,10 @@
 ---Load the API certificate
 ---@return certificate?
 local function load_api_cert()
-	-- Load and parse the chain for the API domain certificate
-	local f, err = io.open('${UKP_PROXY_API_CERT}.crt', 'r')
+	-- Load and parse the chain for the wildcard certificate
+	local f, err = io.open('/var/lib/ukp/data/certificates/wildcard.crt', 'r')
 	if f == nil then
-		ngx.log(ngx.ERR, 'Failed to open ${UKP_PROXY_API_CERT}.crt: ',
-		        err)
+		ngx.log(ngx.ERR, 'Failed to open wildcard.crt: ', err)
 		return nil
 	end
 
@@ -20,16 +20,14 @@
 
 	local api_chain, err = ssl.parse_pem_cert(api_chain_pem)
 	if api_chain == nil then
-		ngx.log(ngx.ERR, 'Failed to parse ${UKP_PROXY_API_CERT}.crt: ',
-		        err)
+		ngx.log(ngx.ERR, 'Failed to parse wildcard.crt: ', err)
 		return nil
 	end
 
-	-- Load and parse the private key for the API domain certificate
-	local f, err = io.open('${UKP_PROXY_API_CERT}.key')
+	-- Load and parse the private key for the wildcard certificate
+	local f, err = io.open('/var/lib/ukp/data/certificates/wildcard.key')
 	if f == nil then
-		ngx.log(ngx.ERR, 'Failed to open ${UKP_PROXY_API_CERT}.key: ',
-		        err)
+		ngx.log(ngx.ERR, 'Failed to open wildcard.key: ', err)
 		return nil
 	end
 
@@ -38,8 +36,7 @@
 
 	local api_pkey, err = ssl.parse_pem_priv_key(api_pkey_pem)
 	if api_pkey == nil then
-		ngx.log(ngx.ERR, 'Failed to parse ${UKP_PROXY_API_CERT}.key: ',
-		        err)
+		ngx.log(ngx.ERR, 'Failed to parse wildcard.key: ', err)
 		return nil
 	end
 
@@ -49,13 +46,32 @@
 	}
 end
 
+---Check if hostname has API prefix (api- or api.)
+---@param hostname string
+---@return boolean
+local function is_api_hostname(hostname)
+	return strings.startsWith(hostname, 'api-') or strings.startsWith(hostname, 'api.')
+end
+
+---Check if hostname has APP prefix (app- or app.)
+---@param hostname string
+---@return boolean
+local function is_app_hostname(hostname)
+	return strings.startsWith(hostname, 'app-') or strings.startsWith(hostname, 'app.')
+end
+
 local metro = '${UKP_PROXY_METRONAME}' ~= '' and ('${UKP_PROXY_METRONAME}' .. '.') or ''
 
 local M = {
 	api_cert = load_api_cert(),
+	-- Single domain zone for both API and APP
 	proxy_domain = metro .. '${UKP_PROXY_DOMAIN}',
+	-- Helper functions for hostname prefix detection
+	is_api_hostname = is_api_hostname,
+	is_app_hostname = is_app_hostname,
+	-- Deprecated: kept for backward compatibility, will be removed
 	proxy_host = 'api.' .. metro .. '${UKP_PROXY_DOMAIN}',
-	proxy_domain_app = metro .. '${UKP_PROXY_DOMAIN_APP}',
+	proxy_domain_app = metro .. '${UKP_PROXY_DOMAIN}',
 }
 
 return M
diff -ruN openresty.orig/usr/lib/ukp/platform/openresty/lua/strings.lua openresty/usr/lib/ukp/platform/openresty/lua/strings.lua
--- openresty.orig/usr/lib/ukp/platform/openresty/lua/strings.lua	2025-08-12 09:03:56.000000000 -0400
+++ openresty/usr/lib/ukp/platform/openresty/lua/strings.lua	2025-08-22 00:06:08.601539304 -0400
@@ -4,4 +4,8 @@
 	return #str >= #suffix and str:sub(-#suffix) == suffix
 end
 
+function M.startsWith(str, prefix)
+	return #str >= #prefix and str:sub(1, #prefix) == prefix
+end
+
 return M
